
// ========== User ============
// Materials
app.get('/materialuser', (req, res) => {
    if (req.session.user) {
        res.render('Index', { user: req.session.user });
    }
    else {
        res.redirect('/')
    }
})

// Cart Page
app.get('/cartpage', (req, res) => {
    if (req.session.user) {
        res.render('Cart', { user: req.session.user })
    }
    else {
        res.redirect('/')
    }

})

// Notification Page
app.get('/notificationuser', (req, res) => {
    if (req.session.user) {
        res.render('Notification', { user: req.session.user })
    }
    else {
        res.redirect('/')
    }
})

// History
// Success
app.get('/histosy(success)', (req, res) => {
    if (req.session.user) {
        res.render('History(success)', { user: req.session.user })
    }
    else {
        res.redirect('/')
    }
})
// Unsuccess
app.get('/history(unsuccess)', (req, res) => {
    if (req.session.user) {
        res.render('History(Unsuccess)', { user: req.session.user })
    }
    else {
        res.redirect('/')
    }
})



// ==================== User Part ==========================

// ============ Material Page ==============
app.get('/datamaterials', (req, res) => {
    const sql = "SELECT * FROM material"
    con.query(sql, (err, result) => {
        if (err) {
            console.log(err)
            res.status(500).send("Database Server Error")
        }
        else {
            res.send(result)
        }
    })
})


//Get data From Category
app.post('/dataCategory', (req, res) => {
    const { cate_id } = req.body;
    if (cate_id == 8) {
        res.redirect("/datamaterials");
    } else {
        const sql = "SELECT * FROM material WHERE category_id = ?"
        con.query(sql, [cate_id], (err, result) => {
            if (err) {
                console.log(err)
                res.status(500).send("Databse Server Error")
            }
            else {
                res.send(result)
            }
        })
    }

})

// ===================== Category =========================
app.get('/category', (req, res) => {
    const sql = "SELECT * FROM category"
    con.query(sql, (err, result) => {
        if (err) {
            console.log(err)
            res.status(500).send("Database Server Error")
        }
        else {
            res.send(result);
        }
    })
})


// Notification Page

// ===================== Count All Notification =================
app.post('/countnoti', (req, res) => {
    if (req.session.user) {
        const user_id = req.session.user.user_id;

        const sql = "SELECT COUNT(requisition.requisition_id) 'COUNTNOTI' FROM requisition JOIN users ON requisition.user_id = users.user_id WHERE requisition.read_requisition = 0 AND users.user_id = ? "
        con.query(sql, [user_id], (err, result) => {
            if (err) {
                console.log(err)
                res.status(500).send('Database Server Error');
            }
            else {
                res.send(result);
            }
        })
    }

})

// ======================= Count Wait Confirm =========================
app.post('/countwaitconfirm', (req, res) => {
    if (req.session.user) {
        const user_id = req.session.user.user_id;

        const sql = "SELECT COUNT(requisition.requisition_id) 'COUNTNOTI' FROM requisition JOIN users ON requisition.user_id = users.user_id WHERE users.user_id = ? AND requisition.status_requisition = 1 "
        con.query(sql, [user_id], (err, result) => {
            if (err) {
                console.log(err)
                res.status(500).send('Database Server Error');
            }
            else {
                res.send(result);
            }
        })
    }
})


// ======================= Count Confirm Noti =============================
app.post('/countconfirm', (req, res) => {
    if (req.session.user) {
        const user_id = req.session.user.user_id;

        const sql = "SELECT COUNT(requisition.requisition_id) 'COUNTNOTI' FROM requisition JOIN users ON requisition.user_id = users.user_id WHERE users.user_id = ? AND requisition.status_requisition = 2 "
        con.query(sql, [user_id], (err, result) => {
            if (err) {
                console.log(err)
                res.status(500).send('Database Server Error');
            }
            else {
                res.send(result);
            }
        })
    }
})



// ===================== Count Disapproval =========================
app.post('/countdisapproval', (req, res) => {
    if (req.session.user) {
        const user_id = req.session.user.user_id;

        const sql = "SELECT COUNT(requisition.requisition_id) 'COUNTNOTI' FROM requisition JOIN users ON requisition.user_id = users.user_id WHERE users.user_id = ? AND requisition.status_requisition = 3 AND requisition.read_requisition = 0"
        con.query(sql, [user_id], (err, result) => {
            if (err) {
                console.log(err)
                res.status(500).send('Database Server Error');
            }
            else {
                res.send(result);
            }
        })
    }
})



// ====================== Count Complete ==========================
app.post('/countcomplete', (req, res) => {
    if (req.session.user) {
        const user_id = req.session.user.user_id;

        const sql = "SELECT COUNT(requisition.requisition_id) 'COUNTNOTI' FROM requisition JOIN users ON requisition.user_id = users.user_id WHERE users.user_id = ? AND requisition.status_requisition = 4 AND requisition.read_requisition = 0"
        con.query(sql, [user_id], (err, result) => {
            if (err) {
                console.log(err)
                res.status(500).send('Database Server Error');
            }
            else {
                res.send(result);
            }
        })
    }
})

// ====================== All Requisition User ==========================
app.post('/allrequisitionuser', (req, res) => {

    if (req.session.user) {
        const user_id = req.session.user.user_id;
        const sql = "SELECT * FROM requisition JOIN users ON users.user_id = ? WHERE requisition.user_id = users.user_id";
        con.query(sql, [user_id], (err, result) => {
            if (err) {
                console.log(err)
                res.status(500).send('Database Server Error')
            }
            else {
                res.json(result)
            }
        })
    }
})


// ================ Wait approve Requisition ========================
app.post('/waitapproverequisition', (req, res) => {
    if (req.session.user) {
        const user_id = req.session.user.user_id;
        const sql = "SELECT * FROM requisition JOIN users ON requisition.status_requisition = 1 AND users.user_id = ? WHERE requisition.user_id = users.user_id"
        con.query(sql, [user_id], (err, result) => {
            if (err) {
                console.log(err);
                res.status(500).send('Database Server Erorr');
            }
            else {
                res.json(result);
            }
        })
    }
})


// =================== Confirm Requisition ====================
app.post('/aprroverequisition', (req, res) => {
    if (req.session.user) {
        const user_id = req.session.user.user_id;
        const sql = "SELECT * FROM requisition JOIN users ON requisition.status_requisition = 2 AND users.user_id = ? WHERE requisition.user_id = users.user_id"
        con.query(sql, [user_id], (err, result) => {
            if (err) {
                console.log(err);
                res.status(500).send('Database Server Erorr');
            }
            else {
                res.json(result);
            }
        })
    }
})


// =================== Disapproval Requisition =========================
app.post('/disapprovalrequisition', (req, res) => {
    if (req.session.user) {
        const user_id = req.session.user.user_id;
        const sql = "SELECT * FROM requisition JOIN users ON requisition.status_requisition = 3 AND users.user_id = ? WHERE requisition.user_id = users.user_id AND requisition.read_requisition = 0"
        con.query(sql, [user_id], (err, result) => {
            if (err) {
                console.log(err)
                res.status(500).send('Database Server Error');
            }
            else {
                const sql = "UPDATE requisition JOIN users SET read_requisition = 1 WHERE requisition.status_requisition = 3 AND users.user_id = ?"
                con.query(sql, [user_id], (err, result) => {
                    if (err) {
                        console.log(err)
                        res.status(500).send('Database Errro')
                    }
                })
                res.json(result);
            }
        })
    }
})


// ==================== Complete Requisition =============================
app.post('/completerequisition', (req, res) => {
    if (req.session.user) {
        const user_id = req.session.user.user_id;
        const sql = "SELECT * FROM requisition JOIN users ON requisition.status_requisition = 4 AND users.user_id = ? WHERE requisition.user_id = users.user_id AND requisition.read_requisition = 0"
        con.query(sql, [user_id], (err, result) => {
            if (err) {
                console.log(err);
                res.status(500).send('Database Server Error')
            }
            else {
                const sql = "UPDATE requisition JOIN users SET read_requisition = 1 WHERE requisition.status_requisition = 4 AND users.user_id = ?"
                con.query(sql, [user_id], (err, result) => {
                    if (err) {
                        console.log(err)
                        res.status(500).send('Database Error')
                    }
                })
                res.json(result);
            }
        })
    }
})


// ==================== Data Requisition ==========================
app.post('/datareq', (req, res) => {
    const requi_id = req.body.requi_id;

    const sql = "SELECT * FROM requisition JOIN users ON requisition.user_id = users.user_id WHERE requisition.requisition_id = ?"
    con.query(sql, [requi_id], (err, result) => {
        if (err) {
            console.log(err);
            res.status(500).send('Database Server Error')
        }
        else {
            res.json(result);
        }
    })
})


// ================== Material in Requisition =======================
app.post('/datamaterial', (req, res) => {
    const requi_id = req.body.requi_id;

    const sql = "SELECT * FROM material_requisiotion JOIN material ON material_requisiotion.material_id = material.material_id WHERE material_requisiotion.requisition_id = ?"
    con.query(sql, [requi_id], (err, result) => {
        if (err) {
            console.log(err);
            res.status(500).send('Database Server Error')
        }
        else {
            res.json(result);
        }
    })
})

app.post('/createRequisition', (req, res) => {
    const { objective, annotation } = req.body;
    const user_id = req.session.user.user_id;
    const sql = 'INSERT INTO requisition(objective , annotation , date_requisition , time_requisition , status_requisition , read_requisition , user_id) VALUES (? , ? , CURDATE() , CURTIME() , 1 , 0 , ?)';
    con.query(sql, [objective, annotation, user_id], (err, result) => {
        if (err) {
            console.log(err);
            res.status(500).send('Database Server Error')
        }
        else {
            if (result.affectedRows != 1) {
                console.log(err);
                res.status(500).send('Insert Error')
            } else {
                res.send();
            }
        }
    });
});

app.post('/addmatrequi', (req, res) => {
    const { material_id, numbermaterial } = req.body;
    const user_id = req.session.user.user_id;
    const sql = 'SELECT MAX(requisition.requisition_id) AS requisition_id FROM requisition WHERE requisition.user_id = ?';
    con.query(sql, [user_id], (err, result) => {
        if (err) {
            console.log(err);
            res.status(500).send('Database Server Error')
        }
        else {
            console.log(material_id);
            const sql = 'INSERT INTO material_requisiotion(material_requisiotion.requisition_id , material_requisiotion.material_id , material_requisiotion.amount_of_requisition , material_requisiotion.amount_of_divide) VALUES (? , ? , ? , 0)';
            con.query(sql, [result[0].requisition_id, material_id, numbermaterial], (err, result) => {
                if (err) {
                    console.log(err);
                    res.status(500).send('Database Server Error')
                }
                else {
                    res.send();
                }
            })
        }
    });
})
